name: Deploy Docker images

on: workflow_call
  workflow_dispatch:
  # push:
  #   branches: ["main"]
  # release:
  #   types: [published]

concurrency: docker

jobs:
  base_image:
    name: Build base image
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: '/var/lib/docker/volumes'
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/educelab/ci-docker
          flavor: |
            latest=false
          tags: |
            type=ref,prefix=base.pr-,event=pr
            type=semver,prefix=base.,pattern={{version}}
            type=semver,prefix=base.,pattern={{major}}.{{minor}}
            type=raw,prefix=base.,value=edge,enable={{is_default_branch}}
            type=raw,prefix=base.,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile.base
          build-args: |
            CI_DOCKER_VERSION=${{ steps.meta.outputs.version || github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=gha,mode=max
          cache-from: type=gha

  vcdeps_images:
    name: Build vc-deps images
    runs-on: ubuntu-latest
    needs: base_image
    strategy:
      fail-fast: false
      matrix:
        type: [static, dynamic]
    steps:
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/educelab/ci-docker
          flavor: |
            latest=false
          tags: |
            type=ref,prefix={{ matrix.type }}.pr-,event=pr
            type=semver,prefix={{ matrix.type }}.,pattern={{version}}
            type=semver,prefix={{ matrix.type }}.,pattern={{major}}.{{minor}}
            type=raw,prefix={{ matrix.type }}.,value=edge,enable={{is_default_branch}}
            type=raw,prefix={{ matrix.type }}.,value=latest,enable=${{ github.event_name == 'release' }}
            type=raw,value=edge,enable=${{ github.ref_name == 'main' && matrix.type == 'static' }}
            type=raw,value=latest,enable=${{ github.event_name == 'release' && matrix.type == 'static' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile.{{ matrix.type }}
          build-args: |
            CI_DOCKER_VERSION=${{ steps.meta.outputs.version || github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
